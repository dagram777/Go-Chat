// Mocks generated by Mockito 5.2.0 from annotations
// in volunteer_ethiopia_mobile/test/infrastructure/auth/user_repo_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:volunteer_ethiopia_mobile/domain/auth/user_model.dart' as _i5;
import 'package:volunteer_ethiopia_mobile/infrastructure/auth/user_data_provider.dart'
    as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

/// A class which mocks [UserDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserDataProvider {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i4.Future<_i5.User?> createUser(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#createUser, [user]),
          returnValue: Future<_i5.User?>.value()) as _i4.Future<_i5.User?>);
  @override
  _i4.Future<List<_i5.User>> getUsers() =>
      (super.noSuchMethod(Invocation.method(#getUsers, []),
              returnValue: Future<List<_i5.User>>.value(<_i5.User>[]))
          as _i4.Future<List<_i5.User>>);
  @override
  _i4.Future<void> deleteUser(int? id) =>
      (super.noSuchMethod(Invocation.method(#deleteUser, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  _i4.Future<void> updateUser(_i5.User? user) =>
      (super.noSuchMethod(Invocation.method(#updateUser, [user]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
}
